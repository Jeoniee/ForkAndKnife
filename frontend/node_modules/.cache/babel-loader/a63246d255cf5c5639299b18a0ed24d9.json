{"ast":null,"code":"var _jsxFileName = \"/Users/jeongjiwon/ForkAndKnife/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './App.css'; // 필요에 따라 CSS 파일 수정\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [location, setLocation] = useState(null);\n  const [weather, setWeather] = useState(null);\n  const [menu, setMenu] = useState('');\n  useEffect(() => {\n    if (\"geolocation\" in navigator) {\n      navigator.geolocation.getCurrentPosition(position => {\n        setLocation({\n          latitude: position.coords.latitude,\n          longitude: position.coords.longitude\n        });\n      });\n    } else {\n      console.log(\"Geolocation is not available\");\n    }\n  }, []);\n  useEffect(() => {\n    if (location) {\n      const fetchWeather = async () => {\n        const apiKey = '79db1276aca996d83f7f74d7d927546c';\n        const url = `https://api.openweathermap.org/data/2.5/weather?lat=${location.latitude}&lon=${location.longitude}&units=metric&appid=${apiKey}`;\n        try {\n          const response = await axios.get(url);\n          setWeather(response.data);\n        } catch (error) {\n          console.error(\"Error fetching weather data\", error);\n        }\n      };\n      fetchWeather();\n    }\n  }, [location]);\n  useEffect(() => {\n    if (weather) {\n      const fetchMenu = async () => {\n        try {\n          const response = await axios.post('http://localhost:8080/api/recommend', {\n            location,\n            weather\n          });\n          setMenu(response.data);\n        } catch (error) {\n          console.error(\"Error fetching menu\", error);\n        }\n      };\n      fetchMenu();\n    }\n  }, [weather]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uC810\\uC2EC \\uBA54\\uB274 \\uCD94\\uCC9C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), location ? weather ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uD604\\uC7AC \\uC704\\uCE58: \", location.latitude, \", \", location.longitude]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uD604\\uC7AC \\uB0A0\\uC528: \", weather.main.temp, \"\\xB0C, \", weather.weather[0].description]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"\\uCD94\\uCC9C \\uBA54\\uB274: \", menu]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uB0A0\\uC528 \\uC815\\uBCF4\\uB97C \\uBD88\\uB7EC\\uC624\\uB294 \\uC911...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uC704\\uCE58 \\uC815\\uBCF4\\uB97C \\uBD88\\uB7EC\\uC624\\uB294 \\uC911...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"Df0oOVbQu692/YPxtj7YhOWHAoo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","App","_s","location","setLocation","weather","setWeather","menu","setMenu","navigator","geolocation","getCurrentPosition","position","latitude","coords","longitude","console","log","fetchWeather","apiKey","url","response","get","data","error","fetchMenu","post","children","fileName","_jsxFileName","lineNumber","columnNumber","main","temp","description","_c","$RefreshReg$"],"sources":["/Users/jeongjiwon/ForkAndKnife/frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './App.css';  // 필요에 따라 CSS 파일 수정\n\nfunction App() {\n    const [location, setLocation] = useState(null);\n    const [weather, setWeather] = useState(null);\n    const [menu, setMenu] = useState('');\n\n    useEffect(() => {\n        if (\"geolocation\" in navigator) {\n            navigator.geolocation.getCurrentPosition(position => {\n                setLocation({\n                    latitude: position.coords.latitude,\n                    longitude: position.coords.longitude\n                });\n            });\n        } else {\n            console.log(\"Geolocation is not available\");\n        }\n    }, []);\n\n    useEffect(() => {\n        if (location) {\n            const fetchWeather = async () => {\n                const apiKey = '79db1276aca996d83f7f74d7d927546c';\n                const url = `https://api.openweathermap.org/data/2.5/weather?lat=${location.latitude}&lon=${location.longitude}&units=metric&appid=${apiKey}`;\n                try {\n                    const response = await axios.get(url);\n                    setWeather(response.data);\n                } catch (error) {\n                    console.error(\"Error fetching weather data\", error);\n                }\n            };\n\n            fetchWeather();\n        }\n    }, [location]);\n\n    useEffect(() => {\n        if (weather) {\n            const fetchMenu = async () => {\n                try {\n                    const response = await axios.post('http://localhost:8080/api/recommend', {\n                        location,\n                        weather\n                    });\n                    setMenu(response.data);\n                } catch (error) {\n                    console.error(\"Error fetching menu\", error);\n                }\n            };\n\n            fetchMenu();\n        }\n    }, [weather]);\n\n    return (\n        <div>\n            <h1>점심 메뉴 추천</h1>\n            {location ? (\n                weather ? (\n                    <div>\n                        <p>현재 위치: {location.latitude}, {location.longitude}</p>\n                        <p>현재 날씨: {weather.main.temp}°C, {weather.weather[0].description}</p>\n                        <h2>추천 메뉴: {menu}</h2>\n                    </div>\n                ) : (\n                    <p>날씨 정보를 불러오는 중...</p>\n                )\n            ) : (\n                <p>위치 정보를 불러오는 중...</p>\n            )}\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}